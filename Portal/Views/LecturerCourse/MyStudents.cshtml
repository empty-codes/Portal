
@{
    ViewBag.Title = "MyStudents";
    Layout = "~/Views/Lecturer/LecturerDashboardLayout.cshtml";
}

<style>
    .btn-score {
        background-color: white;
        width: 70px;
        border: 1px solid black;
    }
</style>

<div class="lecturer-students-list">
    <h3>MyStudents</h3><br />
    <p>Click on the boxes under the 'Score' column to input Student Scores.</p>
    <table id="lecturer-student-table" class="display lecturer-student-table">
        <thead>
            <tr>
                <th>Student Matric No</th>
                <th>Course Id</th>
                <th>Course Title</th>
                <th>Level</th>
                <th>Score</th>
                @*<th>Lecturer</th>*@
            </tr>
        </thead>
    </table>
</div>

<div class="modal fade" id="scoreModal" tabindex="-1" role="dialog" aria-labelledby="scoreModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="scoreModalLabel">Enter Student Score</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="matricNumber" />
                <input type="hidden" id="courseId" />
                <div class="form-group">
                    <label for="scoreInput">Score:</label>
                    <input type="text" class="form-control" id="scoreInput" pattern="^(100|\d{1,2})$" title="Score must be a number from 0 to 100." required>
                    <div class="invalid-feedback">Score must be a number from 0 to 100.</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveScoreBtn">Save</button>
                <button type="button" class="btn btn-secondary" id="cancelScoreBtn" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<link href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" rel="stylesheet" />
<link type="text/css" href="//gyrocode.github.io/jquery-datatables-checkboxes/1.2.12/css/dataTables.checkboxes.css" rel="stylesheet" />


@section scripts {

    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="//gyrocode.github.io/jquery-datatables-checkboxes/1.2.12/js/dataTables.checkboxes.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script type="text/javascript">var url = '@Url.Action("MyStudents", "LecturerCourse")';</script>


    <script>
        var lecturerstudentcoursetable;
        $(document).ready(function () {
            lecturerstudentcoursetable = $("#lecturer-student-table").DataTable({
                "ajax": {
                    "url": "/LecturerCourse/GetLecturerStudents",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "MatricNo" },
                    { "data": "CourseId" },
                    { "data": "CourseTitle" },
                    { "data": "LevelTaken" },
                    {
                        "data": "Score",
                        "render": function (data, type, row) {
                            return '<button class="btn-score" data-matric="' + row.MatricNo + '" data-course="' + row.CourseId + '">' + data + '</button>';
                        }
                    }
                ],
                'dom': 'Bfrtip',
                'buttons': [
                    {
                        'extend': 'copyHtml5',
                        'text': 'Copy to clipboard'
                    },
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ]
            });

        });

        $("#lecturer-student-table").on('click', '.btn-score', function () {
            var matricNumber = $(this).data('matric');
            var courseId = $(this).data('course');

            // Open the modal/popup and display the input box
            $('#scoreModal').modal('show');
            $('#scoreModal').find('#matricNumber').val(matricNumber);
            $('#scoreModal').find('#courseId').val(courseId);
        });


        $('#saveScoreBtn').click(function () {
            var matricNumber = $('#matricNumber').val();
            var courseId = $('#courseId').val();
            var newValue = $('#scoreInput').val();

            // Validate the score using the pattern
            if (!document.getElementById('scoreInput').checkValidity()) {
                // Show the invalid feedback message
                $('#scoreInput').addClass('is-invalid');
                return; // Exit the function if the score is not valid
            }

            $.ajax({
                url: '/LecturerCourse/UpdateScore',
                type: 'POST',
                data: {
                    matricNumber: matricNumber,
                    courseId: courseId,
                    newValue: newValue
                },
                success: function () {
                    $('#scoreModal').modal('hide');
                    alert("Score entered successfully");
                    /*$('#scoreModal').modal('hide');*/

                    // Update the DataTable with the new score value
                    var row = lecturerstudentcoursetable.row(function (idx, data, node) {
                        return data.MatricNo === matricNumber && data.CourseId === courseId;
                    });

                    if (row.length) {
                        var rowData = row.data();
                        rowData.Score = newValue;
                        row.data(rowData).draw(false);
                    }
                },
                error: function () {
                    // Handle error response
                }
            });
        });

        $('#cancelScoreBtn').click(function () {
            $('#scoreModal').modal('hide');
        });

        $('#scoreModal').on('hidden.bs.modal', function () {
            // Clear the input fields when the modal is hidden
            $('#matricNumber').val('');
            $('#courseId').val('');
            $('#scoreInput').val('');
        });
    </script>

}